{"version":3,"sources":["webpack:///../../../src/mixins/loadable/index.ts","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VProgressLinear/index.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts"],"names":["name","props","loading","type","Boolean","default","loaderHeight","Number","methods","genProgress","this","$slots","progress","$createElement","absolute","color","height","indeterminate","$","is","target","stat","mixins","functional","value","max","String","render","parseInt","content","isGreater","h","staticClass","class","ctx","window","mounted","onObserve","destroyed","i","length","options","callback","console","baseMixins","onVisible","dirtyTypes","directives","ripple","inheritAttrs","appendOuterIcon","autofocus","clearable","clearIcon","counter","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","data","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","lazyValue","toString","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","watch","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","clearableCallback","$refs","input","genAppendSlot","slot","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","undefined","attrs","disabled","genCounter","attrs$","dark","light","genControl","genDefaultSlot","genFieldset","genLabel","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","genInput","listeners","Object","id","readonly","on","keydown","onKeyDown","ref","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","e","$nextTick","onClick","onFocus","document","$emit","onInput","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","updateValue"],"mappings":"wJAiBe,8BAA+B,CAC5CA,KAD4C,WAG5CC,MAAO,CACLC,QAAS,CACPC,KAAM,CAACC,QADA,QAEPC,SAAS,GAEXC,aAAc,CACZH,KAAM,CAACI,OADK,QAEZF,QAAS,IAIbG,QAAS,CACPC,YADO,WAEL,WAAIC,KAAKR,QAA0B,KAE5BQ,KAAKC,OAAOC,UAAYF,KAAKG,eAAe,EAApB,KAAqC,CAClEZ,MAAO,CACLa,UADK,EAELC,OAAyB,IAAjBL,KAAKR,SAAN,KAA0BQ,KAAKR,QACjCQ,KAAKK,OADH,UAEHL,KAJC,QAKLM,OAAQN,KALH,aAMLO,eAAe,U,uBC1CzB,IAAIC,EAAI,EAAQ,QACZC,EAAK,EAAQ,QAIjBD,EAAE,CAAEE,OAAQ,SAAUC,MAAM,GAAQ,CAClCF,GAAIA,K,oCCNN,gBAGA,e,uNCQe,SAAAG,EAAA,qBAAyB,CACtCtB,KADsC,YAGtCuB,YAHsC,EAKtCtB,MAAO,CACLuB,MAAO,CACLrB,KAAM,CAACI,OADF,QAELF,QAAS,IAEXoB,IAAK,CAAClB,OAAQmB,SAGhBC,OAbsC,SAahC,KAAQ,IACJ1B,EAAR,EAAQA,MACFwB,EAAMG,SAAS3B,EAAD,IAApB,IACMuB,EAAQI,SAAS3B,EAAD,MAAtB,IACM4B,EAAUJ,EAAM,GAAH,OAAMD,EAAN,iBAAyBE,OAAOzB,EAAnD,OACM6B,EAAYL,GAAQD,EAA1B,EAEA,OAAOO,EAAE,MAAO,CACdC,YADc,YAEdC,MAAO,gBACL,cADK,GAEF,eAAuBC,KAJ9B,MC5BJ,I,gDCMc,cACZ,MAAsB,qBAAXC,QAA4B,yBAAvC,OAKO,cAAW,CAChBnC,KADgB,gBAGhBoC,QAHgB,WAId,gBAAmB1B,KAAnB,IAA4C,CAC1CV,KAD0C,YAE1CwB,MAAOd,KAAK2B,aAIhBC,UAVgB,WAWd,cAAiB5B,KAAjB,MAGFF,QAAS,CACP6B,UADO,SACE,OACP,KAEA,IAAK,IAAIE,EAAJ,EAAWC,EAASC,EAAA,UAAzB,OAAmDF,EAAnD,EAA+DA,IAAK,CAClE,IAAMG,EAAYhC,KAAa+B,EAAA,UAA/B,IAEA,oBAAWC,EAKX,OAAAC,EAAA,MAAYF,EAAA,aAAZ,0FAJEC,SAzBD,cAAW,CAAE1C,KAAM,kB,oDCcxB4C,EAAa,OAAAtB,EAAA,MAAO,EAAD,KAEvB,EAAc,CACZuB,UAAW,CAAC,gBAAD,qDAHf,QAsBMC,EAAa,CAAC,QAAS,OAAQ,OAAQ,OAAQ,iBAAkB,OAAvE,SAGe,OAAAF,EAAA,gBAAoC,CACjD5C,KADiD,eAGjD+C,WAAY,CAAEC,SAAA,MAEdC,cALiD,EAOjDhD,MAAO,CACLiD,gBADK,OAELC,UAFK,QAGLC,UAHK,QAILC,UAAW,CACTlD,KADS,OAETE,QAAS,UAEXiD,QAAS,CAAClD,QAASG,OARd,QASLgD,aATK,SAULC,OAVK,QAWLC,KAXK,QAYLC,UAZK,QAaLC,MAbK,OAcLC,SAdK,QAeLC,YAfK,OAgBLC,OAhBK,OAiBLC,iBAjBK,OAkBLC,QAlBK,QAmBLC,QAnBK,QAoBLC,OApBK,QAqBLC,WArBK,QAsBLC,KAtBK,QAuBLC,aAvBK,QAwBLC,OAxBK,OAyBLnE,KAAM,CACJA,KADI,OAEJE,QAAS,SAIbkE,KAAM,iBAAO,CACXC,UADW,EAEXC,WAFW,EAGXC,YAHW,EAIXC,aAJW,EAKXC,aALW,KAMXC,UANW,EAOXC,YAAY,IAGdC,SAAU,CACRC,QADQ,WAEN,wCACKC,EAAA,mCADE,OAAP,IAEE,gBAFK,EAGL,2BAA4BvE,KAHvB,UAIL,uBAAwBA,KAJnB,OAKL,4BAA6BA,KALxB,SAML,qBAAsBA,KANjB,OAOL,8BAA+BA,KAP1B,aAQL,0BAA2BA,KARtB,KASL,uBAAwBA,KATnB,OAUL,0BAA2BA,KAVtB,SAWL,yBAA0BA,KAXrB,WAYL,wBAAyBA,KAZpB,QAaL,yBAA0BA,KAbrB,SAcL,4BAA6BA,KAdxB,YAeL,wBAAyBA,KAfpB,QAgBL,uBAAwBA,KAAKwD,UAGjCgB,cArBQ,WAsBN,IAAMA,EAAgB,2CAAtB,MAEA,OAAKxE,KAAD,cAAuBA,KAA3B,UAEOA,KAAKK,OAAZ,UAFkDmE,GAIpDC,qBA5BQ,WA6BN,0BAAWzE,KAAP,aACKA,KAAK6C,aAAa7C,KAAzB,gBAEMA,KAAK0E,eAAN,eAAP,QAEFC,WAlCQ,WAmCN,OAAwB,IAAjB3E,KAAK4C,SAAZ,MAAiC5C,KAAK4C,SAExCgC,WArCQ,WAsCN,OAAOL,EAAA,6CAAiDvE,KAAxD,YAEF0E,cAAe,CACbG,IADa,WAEX,OAAO7E,KAAP,WAEF8E,IAJa,SAIV,GACD9E,KAAA,YACAA,KAAA,cAAoBA,KAApB,aAGJ+E,QAjDQ,WAkDN,OAA0B,MAAlB/E,KAAKgF,WACXhF,KAAKgF,UAAUC,WAAWnD,OADrB,GAEL9B,KAFF,UAIFkF,WAtDQ,WAuDN,OACElF,KAAK8C,QACL9C,KADA,QAEAA,KAHF,UAMFmF,cA7DQ,WA8DN,OAAOnF,KAAK+E,SAAW3C,EAAA,SAAoBpC,KAA3C,OAEFoF,SAhEQ,WAiEN,OACEpF,KAAKqF,QACLrF,KADA,YAEAA,KAFA,WAICA,KAAA,SAAgBA,KALnB,UAQFqF,OAzEQ,WA0EN,OAAOrF,KAAK0D,MAAQ1D,KAApB,cAEFsF,cA5EQ,WA6EN,IAAIC,EAAUvF,KAAKoD,SAAWpD,KAAjB,WAAoCA,KAApC,YAAb,EAIA,OAFIA,KAAKwF,YAAcxF,KAAvB,eAA0CuF,GAAUvF,KAAV,cAElCA,KAAKyF,SAASC,MAAQ1F,KAAvB,QAAuC,CAC5C2F,KAD4C,EAE5CC,MAAO,QACL,CACFD,KADE,OAEFC,MAAOL,IAGXM,UAzFQ,WA0FN,OAAO7F,KAAK8F,YAAc9F,KAAD,WAAoBA,KAAD,gBAAwBA,KAApE,cAEFwF,WA5FQ,WA6FN,OAAQxF,KAAD,UACLN,QAAQM,KAAK+F,WAAa/F,KAAlB,eAAwCA,KADlD,eAKJgG,MAAO,CACLR,WADK,gBAELtC,SAFK,gBAGLD,MAHK,WAIHjD,KAAA,UAAeA,KAAf,gBAEFoD,OANK,WAOHpD,KAAA,UAAeA,KAAf,iBAEF+F,UATK,cAULjF,MAVK,SAUA,GACHd,KAAA,cAIJiG,QAjKiD,WAmK3CjG,KAAKkG,OAAOC,eAAhB,QACE,eAAS,MAAO,SAAhB,MAIEnG,KAAKkG,OAAOC,eAAhB,yBACE,eAAS,uBAAwB,eAAjC,MAIEnG,KAAKwD,UAAYxD,KAAK8C,QAAU9C,KAAf,UAAgCA,KAArD,SACE,OAAAiC,EAAA,MAAY,uDAAZ,OAIJP,QAlLiD,WAkL1C,WACL1B,KAAA,WAAkBA,KAAlB,eACAA,KAAA,gBACAA,KAAA,iBACAA,KAAA,kBACAoG,uBAAsB,kBAAO,YAA7B,MAGFtG,QAAS,CAEPuG,MAFO,WAGLrG,KAAA,WAGFsG,KANO,SAMH,GAAW,WAGb7E,OAAA,uBAA6B,WAC3B,eAAoB,cAApB,WAGJ8E,kBAbO,WAaU,WACfvG,KAAA,aAAoBA,KAAKwG,MAAMC,MAA/B,QACAzG,KAAA,WAAe,kBAAM,gBAArB,SAEF0G,cAjBO,WAkBL,IAAMC,EAAN,GAQA,OANI3G,KAAKC,OAAT,gBACE0G,EAAA,KAAU3G,KAAKC,OAAf,iBACSD,KAAJ,iBACL2G,EAAA,KAAU3G,KAAK4G,QAAf,gBAGK5G,KAAK6G,QAAQ,SAAU,QAA9B,IAEFC,oBA5BO,WA6BL,IAAMH,EAAN,GAQA,OANI3G,KAAKC,OAAT,iBACE0G,EAAA,KAAU3G,KAAKC,OAAf,kBACSD,KAAJ,kBACL2G,EAAA,KAAU3G,KAAK4G,QAAf,iBAGK5G,KAAK6G,QAAQ,UAAW,QAA/B,IAEFE,YAvCO,WAwCL,IAAMJ,EAAN,GAQA,OANI3G,KAAKC,OAAT,UACE0G,EAAA,KAAU3G,KAAKC,OAAf,WACSD,KAAJ,YACL2G,EAAA,KAAU3G,KAAK4G,QAAf,WAGK5G,KAAK6G,QAAQ,SAAU,QAA9B,IAEFG,aAlDO,WAmDL,IAAMP,EAAQlC,EAAA,uCAAd,MAEM0C,EAAUjH,KAAhB,sBAOA,OALA,IACEyG,EAAA,SAAiBA,EAAA,UAAjB,GACAA,EAAA,qBAGF,GAEFS,aA9DO,WA+DL,IAAKlH,KAAL,UAAqB,OAAO,KAE5B,IAAM6D,EAAO7D,KAAK+E,aAAUoC,EAAY,CAAEC,MAAO,CAAEC,UAAU,IAE7D,OAAOrH,KAAK6G,QAAQ,SAAU,QAAS,CACrC7G,KAAK4G,QAAQ,QAAS5G,KAAtB,kBADF,MAIFsH,WAvEO,WAwEL,IAAKtH,KAAL,WAAsB,OAAO,KAE7B,IAAMe,GAAuB,IAAjBf,KAAK4C,QAAmB5C,KAAKuH,OAA7B,UAAgDvH,KAA5D,QAEA,OAAOA,KAAKG,eAAe,EAAU,CACnCZ,MAAO,CACLiI,KAAMxH,KADD,KAELyH,MAAOzH,KAFF,MAGLe,MACAD,MAAOd,KAAKyE,yBAIlBiD,WArFO,WAsFL,OAAOnD,EAAA,qCAAP,OAEFoD,eAxFO,WAyFL,MAAO,CACL3H,KADK,cAELA,KAFK,mBAGLA,KAHK,eAILA,KAJK,cAKLA,KALF,gBAQF4H,YAjGO,WAkGL,OAAK5H,KAAL,SAEOA,KAAKG,eAAe,WAAY,CACrCiH,MAAO,CACL,eAAe,IAEhB,CAACpH,KAJJ,cAF2B,MAQ7B6H,SA1GO,WA2GL,IAAK7H,KAAL,UAAqB,OAAO,KAE5B,IAAM6D,EAAO,CACXtE,MAAO,CACLa,UADK,EAELC,MAAOL,KAFF,gBAGLwH,KAAMxH,KAHD,KAILqH,SAAUrH,KAJL,WAKL8H,SAAU9H,KAAD,WAAmBA,KAAK+F,aAAe/F,KAL3C,iBAML+H,IAAK/H,KANA,WAOL2F,KAAM3F,KAAKsF,cAPN,KAQLmC,MAAOzH,KARF,MASL4F,MAAO5F,KAAKsF,cATP,MAULxE,MAAOd,KAAKwF,aAIhB,OAAOxF,KAAKG,eAAe6H,EAApB,OAAkChI,KAAKC,OAAOgD,OAASjD,KAA9D,QAEFiI,UA9HO,WA+HL,IAAMC,EAASlI,KAAD,aAAqBA,KAAKwF,aAAcxF,KAAxC,QAAd,EAAsEA,KAAxD,WACRmI,EAAOnI,KAAKG,eAAe,OAAQ,CACvCiI,SAAU,CAAEC,UAAW,aAGzB,OAAOrI,KAAKG,eAAe,SAAU,CACnCmI,MAAO,CACLJ,MAAQlI,KAAD,cAAwCmH,EAAvB,eAAjB,KAER,CAJH,KAMFoB,SA1IO,WA2IL,IAAMC,EAAYC,OAAA,UAAkBzI,KAApC,YAGA,cAFOwI,EAFD,UAICxI,KAAKG,eAAe,QAAS,CAClCmI,MADkC,GAElCF,SAAU,CACRtH,MAAsB,WAAdd,KAAKP,MAAqBgJ,OAAA,GAAUzI,KAAV,WAA3B,QAAmEA,KAAKgF,WAEjFoC,MAAO,iCACFpH,KADE,QAAF,IAEHyC,UAAWzC,KAFN,UAGLqH,SAAUrH,KAHL,WAIL0I,GAAI1I,KAJC,WAKLmD,YAAanD,KALR,YAML2I,SAAU3I,KANL,WAOLP,KAAMO,KAAKP,OAEbmJ,GAAIH,OAAA,SAAyB,CAC3BnC,KAAMtG,KADqB,OAE3ByG,MAAOzG,KAFoB,QAG3BqG,MAAOrG,KAHoB,QAI3B6I,QAAS7I,KAAK8I,YAEhBC,IAAK,WAGTC,YArKO,WAsKL,IAAKhJ,KAAL,YAAuB,OAAO,KAE9B,IAAMiJ,EAAe1E,EAAA,sCAArB,MACM2E,EAAclJ,KAApB,aAEA,OAAOA,KAAKG,eAAe,MAAO,CAChCmB,YAAa,yBACZ,CAAC,EAFJ,KAOF6H,iBAlLO,WAmLL,OAAOnJ,KAAKG,eAAe,MAAO,CAChCmB,YAAa,sBACZ,CACDtB,KADC,WAEDA,KAAKoD,OAASpD,KAAKoJ,SAAnB,UAFC,KAGDpJ,KAHC,WAIDA,KAAK4D,OAAS5D,KAAKoJ,SAAnB,UANF,QASFA,SA5LO,SA4LC,GACN,OAAOpJ,KAAKG,eAAe,MAAO,CAChCoB,MAAO,iBAAF,OAD2B,GAEhCwH,IAAKtJ,GACJO,KAHH,KAKFqJ,OAlMO,SAkMD,GAAW,WACfrJ,KAAA,aACAsJ,GAAKtJ,KAAKuJ,WAAU,kBAAM,eAA1BD,OAEFE,QAtMO,WAuMDxJ,KAAK+F,WAAa/F,KAAlB,aAAsCA,KAAKwG,MAA/C,OAEAxG,KAAA,qBAEFyJ,QA3MO,SA2MA,GACL,GAAKzJ,KAAKwG,MAAV,MAEA,OAAIkD,SAAA,gBAA2B1J,KAAKwG,MAApC,MACSxG,KAAKwG,MAAMC,MAAlB,aAGGzG,KAAL,YACEA,KAAA,aACAsJ,GAAKtJ,KAAK2J,MAAM,QAAhBL,MAGJM,QAvNO,SAuNA,GACL,IAAMlJ,EAAS4I,EAAf,OACAtJ,KAAA,cAAqBU,EAArB,MACAV,KAAA,SAAgBU,EAAA,UAAmBA,EAAA,SAAnC,UAEFoI,UA5NO,SA4NE,GACHQ,EAAA,UAAc,OAAlB,OAAkCtJ,KAAK2J,MAAM,SAAU3J,KAArB,eAElCA,KAAA,oBAEF6J,YAjOO,SAiOI,GAELP,EAAA,SAAatJ,KAAKwG,MAAtB,QACE8C,EAAA,iBACAA,EAAA,mBAGF/E,EAAA,+CAEFuF,UA1OO,SA0OE,GACH9J,KAAJ,cAAuBA,KAAKqG,QAE5B9B,EAAA,6CAEFwF,cA/OO,WAgPA/J,KAAL,WAEAA,KAAA,WAAkBA,KAAKwG,MAAMvD,MACzB+G,KAAA,IAAwC,IAA/BhK,KAAKwG,MAAMvD,MAAMgH,YAA1B,EAAmDjK,KAAKkK,IAAL,YADrC,IAAlB,IAIFC,eAtPO,WAuPAnK,KAAKwG,MAAV,SAEAxG,KAAA,YAAmBA,KAAKwG,MAAMpD,OAA9B,cAEFgH,gBA3PO,WA4PApK,KAAD,UAAmBA,KAAKwG,MAA5B,mBAEAxG,KAAA,aAAoBA,KAAKwG,MAAM,iBAA/B,cAEF6D,aAhQO,WAiQL,SACGrK,KAAD,gCACO0J,WACN1J,KAAKwG,MAFN,OAGAkD,SAAA,gBAA2B1J,KAAKwG,MAJlC,SAOAxG,KAAA,qBAEA,IAEFsK,YA5QO,SA4QI,GAETtK,KAAA,WAEA,EACEA,KAAA,aAAoBA,KAApB,UACSA,KAAKkE,eAAiBlE,KAA1B,WACLA,KAAA,eAAqBA,KAArB,gB","file":"js/chunk-104c7182.3db77c5e.js","sourcesContent":["import Vue, { VNode } from 'vue'\nimport VProgressLinear from '../../components/VProgressLinear'\n\ninterface colorable extends Vue {\n  color?: string\n}\n\n/**\n * Loadable\n *\n * @mixin\n *\n * Used to add linear progress bar to components\n * Can use a default bar with a specific color\n * or designate a custom progress linear bar\n */\n/* @vue/component */\nexport default Vue.extend<colorable>().extend({\n  name: 'loadable',\n\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    loaderHeight: {\n      type: [Number, String],\n      default: 2,\n    },\n  },\n\n  methods: {\n    genProgress (): VNode | VNode[] | null {\n      if (this.loading === false) return null\n\n      return this.$slots.progress || this.$createElement(VProgressLinear, {\n        props: {\n          absolute: true,\n          color: (this.loading === true || this.loading === '')\n            ? (this.color || 'primary')\n            : this.loading,\n          height: this.loaderHeight,\n          indeterminate: true,\n        },\n      })\n    },\n  },\n})\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.github.io/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","import VProgressLinear from './VProgressLinear'\n\nexport { VProgressLinear }\nexport default VProgressLinear\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'setLabelWidth',\n      'setPrefixWidth',\n      'setPrependWidth',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: { ripple },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return (this.internalValue || '').toString().length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return (this.lazyValue != null &&\n        this.lazyValue.toString().length > 0) ||\n        this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && (!this.isSingle || (!this.isLabelActive && !this.placeholder))\n    },\n    labelValue (): boolean {\n      return !this.isSingle &&\n        Boolean(this.isFocused || this.isLabelActive || this.placeholder)\n    },\n  },\n\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    this.autofocus && this.tryAutofocus()\n    this.setLabelWidth()\n    this.setPrefixWidth()\n    this.setPrependWidth()\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append'] as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.computedCounterValue,\n        },\n      })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners['change'] // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input ||\n        document.activeElement === this.$refs.input\n      ) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"],"sourceRoot":""}